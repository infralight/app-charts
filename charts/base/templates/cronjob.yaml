{{- if and .Values.useCronJob (not .Values.useStatefulSet) }}
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.appName }}
  name: {{ .Values.appName }}
spec:
  schedule: {{ .Values.CronJob.schedule | quote }}
  suspend: {{ .Values.CronJob.suspend | default false }}
  concurrencyPolicy: {{ .Values.CronJob.concurrencyPolicy | default "Allow" | quote }}
  failedJobsHistoryLimit: {{ .Values.CronJob.failedJobsHistoryLimit | default 1 }}
  successfulJobsHistoryLimit: {{ .Values.CronJob.successfulJobsHistoryLimit | default 3 }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            karpenter.sh/do-not-evict: 'true'
          labels:
            cron: {{ .Values.appName }}-cron
            app.kubernetes.io/instance: {{ .Values.appName }}
            app.kubernetes.io/name: {{ .Values.appName }}
        spec:
          {{- if .Values.serviceAccount.create }}
          serviceAccountName: {{ .Values.serviceAccount.name }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.terminationGracePeriodSeconds }}
          terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds.seconds }}
          {{- end }}
          {{- if .Values.nodeSelector }}
          nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 12 }}
          {{- end }}
        {{- if .Values.volumesSecret }}
          volumes:
            - name: {{ .Values.volumesSecret.name }}
              secret:
                secretName: {{ .Values.volumesSecret.secret.secretName }}
        {{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- if .Values.tolerations }}
          tolerations:
            {{- range .Values.tolerations }}
            - effect: "{{ .effect }}"
              key: "{{ .key }}"
              operator: "{{ .operator }}"
              value: "{{ .value }}"
            {{- end }}
          {{- end }}
          {{- if .Values.affinity }}
          affinity:
{{- toYaml .Values.affinity | nindent 10 }}
          {{- end }} 
          containers:
          - image: "{{ .Values.account }}.dkr.ecr.{{ .Values.region }}.amazonaws.com/{{ .Values.containers.repository }}:{{ if .Values.containers.tag }}{{ .Values.containers.tag }}{{ else }}{{ .Values.tag }}{{ end }}"
            imagePullPolicy: {{ .Values.containers.imagePullPolicy }}
            {{- if .Values.containers.command }}
            command:
              {{- include "base.tplvalues.render" ( dict "value" .Values.containers.command "context" $ ) | nindent 14 }}
            {{- end }}
            {{- if .Values.containers.volumeMounts }}
            volumeMounts:
            {{- include "base.tplvalues.render" ( dict "value" .Values.containers.volumeMounts "context" $ ) | nindent 14 }}
            {{- end }}
            {{- if .Values.containers.args }}
            args:
              {{- include "base.tplvalues.render" ( dict "value" .Values.containers.args "context" $ ) | nindent 14 }}
            {{- end }}
            {{- if .Values.containers.ports }}
            ports:
              {{- include "base.tplvalues.render" (dict "value" .Values.containers.ports "context" $) | nindent 14 }}
            {{- end }}
            {{- if .Values.containers.env }}
            env:
              {{- include "base.tplvalues.render" (dict "value" .Values.containers.env "context" $) | nindent 14 }}
            {{- end }}
            {{- if .Values.configMaps }}
            {{- if .Values.externalsecret }}
            envFrom:
            {{- range .Values.configMaps }}
              - configMapRef:
                  name: {{ .name }}
            {{- end }}
              - secretRef:
                  name: {{ .Values.externalsecret.targetname }}
            {{- else }}
            envFrom:
            {{- range .Values.configMaps }}
              - configMapRef:
                  name: {{ .name }}
            {{- end }}
            {{- end }}
            {{- else if .Values.externalsecret }}
            envFrom:
              - secretRef:
                  name: {{ .Values.externalsecret.targetname }}
            {{- end }}
            name: {{ .Values.appName }}
            resources:
{{- toYaml .Values.resources | nindent 14 }}
{{- end }}
