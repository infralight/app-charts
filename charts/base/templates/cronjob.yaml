{{- if and .Values.useCronJob (not .Values.useStatefulSet) }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.appName }}
  name: {{ .Values.appName }}
spec:
  schedule: "*/5 * * * *"  # Define your desired schedule here (e.g., run every 5 minutes)
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            karpenter.sh/do-not-evict: 'true'
          labels:
            cron: {{ .Values.appName }}-cron
            app.kubernetes.io/instance: {{ .Values.appName }}
            app.kubernetes.io/name: {{ .Values.appName }}
    spec:
    {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
    {{- end }}
    {{- if .Values.securityContext }}
      securityContext:	
{{- toYaml .Values.securityContext | nindent 10 }}
    {{- end }}
    {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds.seconds }}
    {{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 10 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{- range .Values.tolerations }}
        - effect: "{{ .effect }}"
          key: "{{ .key }}"
          operator: "{{ .operator }}"
          value: "{{ .value }}"
{{- end }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
{{- end }} 
      restartPolicy: {{ .Values.restartPolicy }}
      containers:
      - image: "{{ trimPrefix "_" .Values.account }}.dkr.ecr.{{ .Values.region }}.amazonaws.com/{{ ne .Values.ecrAppName ""  | ternary .Values.ecrAppName .Values.appName }}:{{ .Values.tag }}"
{{- if .Values.containers.ports }}
        ports:
    {{- include "base.tplvalues.render" ( dict "value" .Values.containers.ports "context" $ ) | nindent 10 }}
{{- end }}
{{- if .Values.containers.env }}
        env:
    {{- include "base.tplvalues.render" ( dict "value" .Values.containers.env "context" $ ) | nindent 10 }}
{{- end }}
{{- if .Values.configMap }}
{{- if .Values.externalsecret }}
        envFrom:
          - configMapRef:
              name: {{ .Values.appName }}-config-map
          - secretRef:
              name: {{ .Values.appName }}-secrets
{{- else }}
        envFrom:
          - configMapRef:
              name: {{ .Values.appName }}-config-map
{{- end }}
{{- else if .Values.externalsecret }}
        envFrom:
          - secretRef:
              name: {{ .Values.appName }}-secrets
{{- end }}
        name: {{ .Values.appName }}
      {{- if .Values.containers.securityContext }}
        securityContext:	
{{- toYaml .Values.containers.securityContext | nindent 10 }}
      {{- end }}
{{- if .Values.readinessProbe }}
        readinessProbe:
{{- toYaml .Values.readinessProbe | nindent 10 }}
{{- end }}
{{- if .Values.livenessProbe }}
        livenessProbe:
{{- toYaml .Values.livenessProbe | nindent 10 }}
{{- end }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
{{- end }}