{{- if .Values.firefly.crd.Crawler.create }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  name: crawlers.states.gofirefly.io
  namespace: {{ .Values.namespace }}
spec:
  group: states.gofirefly.io
  names:
    kind: Crawler
    listKind: CrawlerList
    plural: crawlers
    singular: crawler
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: Crawler is the Schema for the crawlers API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CrawlerSpec defines the desired state of Crawler
              properties:
                jobSpec:
                  default:
                    activeDeadlineSeconds: 14400
                    backoffLimit: 0
                    completions: 1
                    parallelism: 1
                    ttlSecondsAfterFinished: 0
                  description: JobSpec the jobs spec for new resources.
                  properties:
                    activeDeadlineSeconds:
                      default: 14400
                      description: ActiveDeadlineSeconds specifies the duration in seconds
                        relative to the startTime that the job may be continuously active
                        before the system tries to terminate it; value must be positive
                        integer. If a Job is suspended (at creation or through an update),
                        this timer will effectively be stopped and reset when the Job
                        is resumed again.
                      format: int64
                      type: integer
                    backoffLimit:
                      default: 0
                      description: BackoffLimit specifies the number of retries before
                        marking this job failed.
                      format: int32
                      type: integer
                    completions:
                      default: 1
                      description: Completions specifies the desired number of successfully
                        finished pods the job should be run with.  Setting to nil means
                        that the success of any pod signals the success of all pods,
                        and allows parallelism to have any positive value.  Setting
                        to 1 means that parallelism is limited to 1 and the success
                        of that pod signals the success of the job.
                      format: int32
                      type: integer
                    parallelism:
                      default: 1
                      description: Parallelism specifies the maximum desired number
                        of pods the job should run at any given time. The actual number
                        of pods running in steady state will be less than this number
                        when ((.spec.completions - .status.successful) < .spec.parallelism),
                        i.e. when the work left to do is less than max parallelism.
                      format: int32
                      type: integer
                    ttlSecondsAfterFinished:
                      default: 0
                      description: TTLSecondsAfterFinished limits the lifetime of a
                        Job that has finished execution (either Complete or Failed).
                        If this field is set, ttlSecondsAfterFinished after the Job
                        finishes, it is eligible to be automatically deleted. When the
                        Job is being deleted, its lifecycle guarantees (e.g. finalizers)
                        will be honored. If this field is unset, the Job won't be automatically
                        deleted. If this field is set to zero, the Job becomes eligible
                        to be deleted immediately after it finishes.
                      format: int32
                      type: integer
                  type: object
                maxReplicas:
                  default: 50
                  description: MaxReplicas the max jobs the fetcher can create for each
                    integration.
                  type: integer
                noLimit:
                  description: NoLimit set if to use it in unlimited jobs creations
                    for accounts
                  type: boolean
                priorityQueue:
                  description: PriorityQueue the priority sqs queue to watch for Crawler.
                  properties:
                    dlqUrl:
                      type: string
                    maxReceiveCount:
                      format: int32
                      type: integer
                    url:
                      type: string
                  required:
                    - url
                  type: object
                queue:
                  description: Queue the main sqs queue to watch for Crawler.
                  properties:
                    dlqUrl:
                      type: string
                    maxReceiveCount:
                      format: int32
                      type: integer
                    url:
                      type: string
                  required:
                    - url
                  type: object
                replicasLimits:
                  description: ReplicasLimits custom replicas limits.
                  items:
                    properties:
                      accountId:
                        type: string
                      integrationId:
                        type: string
                      maxReplicas:
                        format: int32
                        type: integer
                    type: object
                  type: array
                resourceProfile:
                  default: small
                  description: ResourceProfile the resource profile for jobs resources
                  enum:
                    - xsmall
                    - small
                    - xmedium
                    - medium
                    - large
                    - xlarge
                  type: string
                roleARN:
                  description: RoleARN the aws role arn for the jobs
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend the reconciliation
                    of Crawler.
                  type: boolean
              required:
                - queue
                - roleARN
              type: object
            status:
              default:
                observedGeneration: -1
              description: CrawlerStatus defines the observed state of Crawler
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
{{- end }}