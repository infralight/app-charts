{{- if and (.Values.ingresses) (eq .Values.service.type "NodePort") -}}
{{- range $index, $ingress := .Values.ingresses }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:{{ $.Values.region }}:{{ trimPrefix "_" $.Values.account }}:certificate/{{ $ingress.cert }}
    alb.ingress.kubernetes.io/healthcheck-path: '{{ $ingress.healthcheckpath }}'
    alb.ingress.kubernetes.io/listen-ports: '{{ $ingress.listenports }}'
    alb.ingress.kubernetes.io/scheme: '{{ $ingress.schema }}'
    alb.ingress.kubernetes.io/success-codes: '{{ $ingress.successcodes }}'
    alb.ingress.kubernetes.io/wafv2-acl-arn: {{ $ingress.waf.arn }}
    {{- if $ingress.loadBalancerAttributes }}
    alb.ingress.kubernetes.io/load-balancer-attributes: {{ $ingress.loadBalancerAttributes | quote }}
    {{- end }}
    external-dns.alpha.kubernetes.io/hostname: '{{ $ingress.dns }}'
    {{- if $ingress.externaldns }}
    external-dns.alpha.kubernetes.io/aws-geolocation-country-code: '*'	
    external-dns.alpha.kubernetes.io/set-identifier: '{{ $ingress.setidentifier }}'
    {{- end }}
    kubernetes.io/ingress.class: alb
    kubernetes.io/tls-acme: 'true'
  labels:
    app.kubernetes.io/instance: {{ $.Values.appName }}
    app.kubernetes.io/name: {{ $.Values.appName }}
  name: {{ $ingress.name }}
  namespace: {{ $.Values.namespace }}
spec:
  rules:
  - host: {{ $ingress.dns }}
    http:
      paths:
      - backend:
          service:
            name: {{ $ingress.svcName }}
            port:
              number: {{ $ingress.servicePort }}
        path: {{ $ingress.path }}
        pathType: {{ $ingress.pathType }}
  tls:
  - hosts:
    - {{ $ingress.dns }}
    secretName: {{ $ingress.secretName }}
{{- end -}}
{{- end -}}
